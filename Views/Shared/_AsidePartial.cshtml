@using Opuestos_por_el_Vertice.Models.Services.ViewModels
@using Opuestos_por_el_Vertice.Models.ViewModels
@model ViewKindViewModel
@{
    List<List<PostViewModel>> asidesList = new();
    int blockIterations = 0;

    if (Model.Kind.Equals("Post") || Model.Kind.Contains("Search") && !Model.Kind.Contains("Index"))
    {
        if (Model.Kind.Equals("Post"))
        {
            if (Model.ObjectClass.CurrentPost.Category == "Genre") { asidesList.Add(Model.ObjectClass.CurrentPostList.Where(p => p.Category == "Genre").ToList()); }
            else if (Model.ObjectClass.CurrentPost.Category == "Album") { asidesList.Add(Model.ObjectClass.CurrentPostList.Where(p => p.Category == "Album").ToList()); }
            else { asidesList.Add(Model.ObjectClass.CurrentPostList.Where(p => p.Category == "Artist").ToList()); }     // always it prioritize Artist catalog front anothers options
        }
        else
        {
            if (Model.ObjectClass.CurrentPostList.Count > 0)
            {
                if (Model.ObjectClass.CurrentPostList[0].Category.Equals("Genre")) { asidesList.Add(Model.ObjectClass.CurrentPostList.Where(p => p.Category == "Genre").ToList()); }
                else if (Model.ObjectClass.CurrentPostList[0].Category == "Album") { asidesList.Add(Model.ObjectClass.CurrentPostList.Where(p => p.Category == "Album").ToList()); }
                else { asidesList.Add(Model.ObjectClass.CurrentPostList.Where(p => p.Category == "Artist").ToList()); }
            }
        }
    }
    else
    {
        for (int i = 0; i < 3; i++)
        {
            switch (i)
            {
                case 2: asidesList.Add(Model.ObjectClass.CurrentPostList.Where(p => p.Category == "Genre").ToList()); break;
                case 1: asidesList.Add(Model.ObjectClass.CurrentPostList.Where(p => p.Category == "Album").ToList()); break;
                default: asidesList.Add(Model.ObjectClass.CurrentPostList.Where(p => p.Category == "Artist").ToList()); break;
            }
        }
    }
    blockIterations = asidesList.Count; if (blockIterations == 0) { blockIterations = 1; }

    string asideTitle = "";
    List<string> asideTitles = new();
    for (int i = 0; i < blockIterations; i++)
    {
        if (blockIterations == 1)
        {
            if (Model.Kind == "Post")
            {
                if (Model.ObjectClass.CurrentPost.Category != "")
                    switch (Model.ObjectClass.CurrentPost.Category)
                    {
                        case "Genres": asideTitle = "Genres or Subgenres More Popular"; break;
                        case "Albums": asideTitle = "Albums More Popular"; break;
                        default: asideTitle = "Artist or Bands More Popular"; break;
                    }
            }
            else
            {
                switch (Model.Kind)
                {
                    case "GenresSearch": asideTitle = "Genres or Subgenres More Popular"; break;
                    case "AlbumsSearch": asideTitle = "Albums More Popular"; break;
                    default: asideTitle = "Artist or Bands More Popular"; break;
                }
            }

        }
        else
        {
            switch (i)
            {
                case 2: asideTitle = "Genres or Subgenres More Popular"; asideTitles.Add(asideTitle); break;
                case 1: asideTitle = "Albums More Popular"; asideTitles.Add(asideTitle); break;
                default: asideTitle = "Artist or Bands More Popular"; asideTitles.Add(asideTitle); break;
            }
        }
    }
}

<div class="container text-center">
    <div class="search-bar row">
        <partial name="../Shared/_SearchBarForm.cshtml" />
    </div>
    <div class="more-popular-aside row">
        <div class="col">
            @for (int asides = 0; asides < blockIterations; asides++)
            {
                <div class="block-title row">
                    @if (asideTitles.Count > 0)
                    {
                        <h5 class="aside-title">@asideTitles[asides]</h5>
                    }
                    else if (asideTitle != "")
                    {
                        <h5 class="aside-title">@asideTitle</h5>
                    }
                </div>
                <div class="more-popular-aside-body row">
                    <ul>
                        @for (int i = 0; i < asidesList[asides].Count; i++)
                        {
                            if (asidesList[i].Count > 0)
                            {
                                <li>
                                    <a href="#">
                                        <h5>@asidesList[asides][i].Title</h5>
                                        <h6>@asidesList[asides][i].SubTitle</h6>
                                    </a>
                                </li>
                            }
                        }
                    </ul>
                </div>
            }
        </div>
    </div>
</div>